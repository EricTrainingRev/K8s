apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "library-deployment"
  namespace: "default"
  labels:
    deployment: "library-deployment"
spec:
  replicas: 3
  # minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: "library-app"
  template:
    metadata:
      labels:
        app: library-app
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: "library-app"
        image: "esuminski/k8-library:latest"
        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres-service:5432/default_database # could also do jdbc:postgresql://postgres-service.default.svc.cluster.local:5432/default_database this way should not be dependent on creation order
        - name: SPRING_DATASOURCE_USERNAME
          value: username
        - name: SPRING_DATASOURCE_PASSWORD
          value: password
        volumeMounts:
          - mountPath: /logs
            name: logs

      - name: promtail-container
        image: grafana/promtail
        args:
        - -config.file=/etc/promtail/promtail.yml
        volumeMounts:
        - name: logs
          mountPath: /logs
        - name: promtail-config
          mountPath: /etc/promtail
      volumes:
        - name: logs
          # emptyDir: {}
        - name: promtail-config
          configMap:
            name: promtail-config
